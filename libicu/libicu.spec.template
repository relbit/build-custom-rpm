Name:           RPM_NAME
Summary:        RPM_SUMMARY
Version:        RPM_VERSION
%define         version_enc     RPM_VERSIO2
%define         relver          RPM_RELEASE
Release:        %{relver}%{?dist}
License:        RPM_LICENSE
URL:            RPM_URL
Source0:        RPM_SOURCE0
%define         sourcen0        RPM_SOURCEN0
Distribution:   RPM_DISTRIBUTION
Packager:       RPM_PACKAGER

Group:     Development/Tools
Source1:   icu-config
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
BuildRequires: doxygen, autoconf
Requires: lib%{name} = %{version}-%{release}

%description
Tools and utilities for developing with icu.

%package -n %{name}
Summary: International Components for Unicode - libraries
Group:   System Environment/Libraries

%description -n %{name}
The International Components for Unicode (ICU) libraries provide
robust and full-featured Unicode services on a wide variety of
platforms. ICU supports the most current version of the Unicode
standard, and they provide support for supplementary Unicode
characters (needed for GB 18030 repertoire support).
As computing environments become more heterogeneous, software
portability becomes more important. ICU lets you produce the same
results across all the various platforms you support, without
sacrificing performance. It offers great flexibility to extend and
customize the supplied services.

%package  -n %{name}-devel
Summary:  Development files for International Components for Unicode
Group:    Development/Libraries
Requires: lib%{name} = %{version}-%{release}
Requires: pkgconfig

%description -n %{name}-devel
Includes and definitions for developing with icu.

%package -n %{name}-doc
Summary: Documentation for International Components for Unicode
Group:   Documentation
BuildArch: noarch

%description -n %{name}-doc
%{summary}.

%prep
%setup -D -q -n %{sourcen0}

%build
cd source
#autoconf
CFLAGS='%optflags -fno-strict-aliasing'
CXXFLAGS='%optflags -fno-strict-aliasing'
%configure --with-data-packaging=library --disable-samples
make %{?_smp_mflags}
make doc

%install
rm -rf $RPM_BUILD_ROOT source/__docs
make -C source install DESTDIR=$RPM_BUILD_ROOT
make -C source install-doc docdir=__docs
chmod +x $RPM_BUILD_ROOT%{_libdir}/*.so.*
cp -p %{SOURCE1} $RPM_BUILD_ROOT%{_bindir}/%{name}-config
chmod 0755 $RPM_BUILD_ROOT%{_bindir}/%{name}-config

%clean
rm -rf $RPM_BUILD_ROOT

%post -n lib%{name} -p /sbin/ldconfig

%postun -n lib%{name} -p /sbin/ldconfig

%files
%defattr(-,root,root,-)
%doc license.html readme.html
%{_bindir}/*
%{_sbindir}/*
%{_mandir}/man1/*.1*
%{_mandir}/man8/*.8*

%files -n %{name}
%defattr(-,root,root,-)
%{_libdir}/*.so.*

%files -n %{name}-devel
%defattr(-,root,root,-)
%{_bindir}/%{name}-config
%{_mandir}/man1/%{name}-config.1*
%{_includedir}/layout
%{_includedir}/unicode
%{_libdir}/*.so
%{_libdir}/pkgconfig/icu*.pc
%{_libdir}/%{name}
%dir %{_datadir}/%{name}
%dir %{_datadir}/%{name}/%{version}
%{_datadir}/%{name}/%{version}/install-sh
%{_datadir}/%{name}/%{version}/mkinstalldirs
%{_datadir}/%{name}/%{version}/config
%doc %{_datadir}/%{name}/%{version}/license.html

%files -n %{name}-doc
%defattr(-,root,root,-)
%doc source/__docs/%{name}/html/*

